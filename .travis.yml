sudo: required
dist: trusty

language: rust
# run builds for all the trains (and more)
rust:
  - stable
  - beta
  - nightly
os:
  - linux
  - osx

# cache dependencies: https://docs.travis-ci.com/user/caching/#Rust-Cargo-cache
cache: cargo
cache:
  directories:
    - $HOME/.cargo

env:
  global:
    - RUST_BACKTRACE=1
    - SCCACHE_ERROR_LOG=/tmp/sccache.log
    - RUSTC_WRAPPER=/usr/local/bin/sccache
    - SCCACHE_BUCKET=rusoto-ci-sccache

install:
 - |
     case "$TRAVIS_OS_NAME" in
       linux)
         #curl -fo /usr/local/bin/sccache https://path/to/linux/sccache && chmod +x /usr/local/bin/sccache
         ;;
       osx)
         brew update && brew install awscli && aws s3 cp s3://rusotobinaries/sccache-osx /usr/local/bin/sccache && chmod +x /usr/local/bin/sccache
         ;;
     esac
script:
  - |
      echo "Generating service crates..." &&
      ( cd service_crategen && \
        cargo run -- generate -c ./services.json -o ../rusoto/services && \
        cd .. )
  - echo "Running Rusoto tests" && cargo update && cargo test --lib --all
  - |
      echo "Building integration tests" &&
        ( cd integration_tests && \
          cargo test --features "all" --no-run && \
          cd .. )
  - |
      echo "Running cargo docs on stable Rust on Linux" &&
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        cargo doc --all --no-deps
      fi
after_success:
  # upload the documentation from the build if it's from Rust stable, Linux and not a pull request:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" && "$TRAVIS_PULL_REQUEST" == false ]]; then
        echo '<meta http-equiv=refresh content=0;url=rusoto_core/index.html>' > target/doc/index.html \
        && mkdir target/doc/rusoto/ && echo '<meta http-equiv=refresh content=0;url=../rusoto_core/index.html>' > target/doc/rusoto/index.html \
        && sudo pip install ghp-import && ghp-import -n target/doc \
        && git push -fq https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages \
        && cd ..
      fi

after_failure:
  - echo "### Build Failed, Echoing SCCache Log\n"
  - cat /tmp/sccache.log

branches:
  only:
    - master
    - auto

notifications:
  email: false

matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
